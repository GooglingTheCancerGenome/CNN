#!/bin/bash -x
#$ -S /bin/bash
#$ -l h_rt=24:00:00
#$ -l h_vmem=64G
#$ -q all.q
#$ -wd /hpc/cog_bioinf/ridder/users/lsantuari/Git/DeepSV_runs/060219/CNN/scripts

echo "Load python"
# conda environment with required Python packages:
# pysam
# numpy
# pickle
# bz2file
# logging
source activate channel-maker

# If directory for script used to store per chromosome output files does not exist, create it
[ ! -d ${OUTARG}"/"${PRGARG} ] && mkdir -p ${OUTARG}"/"${PRGARG}

# which sample is considered
echo ${SAMPLEARG}
# which script is being executed
echo ${PRGARG}
# which BAM file is considered
echo ${BAMARG}
# which chromosome is considered
echo ${CHRARG}

echo "Running ${PRGARG} for ${BAMARG} ${CHRARG}"

# coverage.py will output file with extension '.npy.bz2'
if [ ${PRGARG} == 'coverage' ]; then
        python "pairs/${PRGARG}.py" \
                --bam ${BAMARG} \
                --chr ${CHRARG} \
                --out ${OUTARG}"/"${PRGARG}"/"${CHRARG}"_${PRGARG}.npy.bz2" \
                --logfile ${OUTARG}"/"${PRGARG}"/"${CHRARG}"_${PRGARG}.log"

# ChannelMaker for real data. Flag 'train' is only used to output the NoSV category for training, that for now it is
# not implemented in the channel_make_train.py script
elif [ ${PRGARG} == 'channel_maker' ]; then
        python "pairs/${PRGARG}.py" \
                --bam ${BAMARG} \
                --chr ${CHRARG} \
		        --sample ${SAMPLEARG} \
                --out ${OUTARG}"/"${PRGARG}"/"${SAMPLEARG}"_"${CHRARG}".npy.gz" \
                --logfile ${OUTARG}"/"${PRGARG}"/"${SAMPLEARG}"_"${CHRARG}".log"

# ChannelMaker for training data
elif [ ${PRGARG} == 'channel_maker_train_germline' ]; then
        python "pairs/${PRGARG}.py" \
                --bam ${BAMARG} \
                --chr ${CHRARG} \
                --sample ${SAMPLEARG} \
		        --train True \
		        --svmode ${SVMODEARG} \
                --out ${OUTARG}"/"${PRGARG}"/"$SAMPLEARG".npy.gz" \
                --logfile ${OUTARG}"/"${PRGARG}"/"${CHRARG}"_${PRGARG}.log"

else
# generic execution
	python "pairs/${PRGARG}.py" \
                --bam ${BAMARG} \
                --chr ${CHRARG} \
                --out ${OUTARG}"/"${PRGARG}"/"${CHRARG}"_${PRGARG}.pbz2" \
                --logfile ${OUTARG}"/"${PRGARG}"/"${CHRARG}"_${PRGARG}.log"
fi

